<template>
	<view class="com-image_warp">
		<image
			class="com-image"
			:src="src"
			:mode="mode"
			lazy-load
			@error="handleError"
			@load="handleLoad"></image>
		<view class="com-image-error"
			v-if="isError">
			<text class="txt"
				v-if="showErrMsg">{{ errMsg }}</text>
			<template v-else>
				<slot></slot>
			</template>
		</view>
		<view class="com-image-loading"
			v-else-if="isLoading && showLoading"></view>
	</view>
</template>

<script lang="uts" setup>
	defineProps({
		src: {
			type: String,
			required: true,
			default: ''
		},
		mode: {
			type: String,
			default: 'scaleToFill'
		},
		showLoading: {
			type: Boolean,
			default: true,
		},
		showErrMsg: {
			type: Boolean,
			default: true,
		}
	})
	const isLoading = ref<boolean>(true)
	const isError = ref<boolean>(false)
	const errMsg = ref<string>('')
	const isSuccess = ref<boolean>(false)
	const handleError = (error : UniImageErrorEvent) : void => {
		isError.value = true
		isSuccess.value = false
		isLoading.value = false
		errMsg.value = error.detail.errMsg
		console.error(`Image loading failedï¼š${errMsg.value}`)
	}
	const handleLoad = () : void => {
		isError.value = false
		isSuccess.value = true
		isLoading.value = false
	}
</script>

<style lang="scss">
	.com-image_warp {
		position: relative;
		width: 100%;
		height: 100%;
		background-color: #ebe8e8;

		.com-image {
			position: relative;
			width: 100%;
			height: 100%;

			&-loading {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				background-color: rgba(255, 255, 255);
				animation: loading 1.5s linear infinite;
			}

			&-error {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				display: flex;
				align-items: center;
				justify-content: center;

				.txt {
					color: red;
					font-size: 16rpx;
				}
			}
		}
	}

	@keyframes loading {
		0% {
			opacity: 0.5;
		}

		50% {
			opacity: 0.3;
		}

		100% {
			opacity: 0.5;
		}
	}
</style>